% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extremeForest.R, R/fit.R
\name{predict_erf}
\alias{predict_erf}
\title{Extreme predictions with a quantile forest}
\usage{
predict_erf(
  object,
  quantiles = c(0.95, 0.99),
  threshold = 0.8,
  newdata = NULL,
  model_assessment = FALSE,
  Y.test = NULL,
  out_of_bag = FALSE,
  param_est = c("ML", "Hill"),
  lambda = 0
)

predict_erf(
  object,
  quantiles = c(0.95, 0.99),
  threshold = 0.8,
  newdata = NULL,
  model_assessment = FALSE,
  Y.test = NULL,
  out_of_bag = FALSE,
  param_est = c("ML", "Hill"),
  lambda = 0
)
}
\arguments{
\item{object}{Quantile forest object. The trained forest obtained with
\code{\link[grf]{quantile_forest}}.}

\item{quantiles}{Numeric vector (0, 1).
Extreme quantiles at which estimates are required.
Default is \code{quantiles = c(0.95, 0.99)}.}

\item{threshold}{Numeric (0, 1). Intermediate quantile used to compute
thresholds \eqn{t(x_i)} for the GPD.
Note that \code{threshold} < \code{quantiles}.
Default is 0.8.}

\item{newdata}{Numeric matrix.
Rows contain observation at which predictions should be made.
If NULL, makes out-of-bag predictions on the training set
instead (i.e., provides predictions at Xi using only trees
that did not use the i-th training example). Note
that this matrix should have the number of columns as the
training matrix, and that the columns must appear in the same
order. This argument is needed if
\code{model_assessment = TRUE}.
Default is \code{NULL}.}

\item{model_assessment}{Boolean. Assess GPD fit with QQ-plot against
exponential distribution?
Default is \code{FALSE}.}

\item{Y.test}{Numeric vector. Responses for the test set, needed
if \code{model_assessment = TRUE}.
Default is \code{NULL}.}

\item{out_of_bag}{Boolean. Use out-of-bag observations to compute thresholds
\eqn{t(x_i)} for the GPD?
Default is \code{FALSE}.}

\item{param_est}{Character. One of \code{"ML"} and \code{"Hill"}. Specifies the method to
fit the shape and scale parameter of the GDP distribution.
\code{"ML"} is the weighted maximum likelihood approach proposed by
\insertCite{merg2020;textual}{erf}.
\code{"Hill"} is the weighted Hill's estimator approach proposed
by \insertCite{deub2020;textual}{erf}.
Default is \code{"ML"}.}

\item{lambda}{Numeric (>= 0). Penalty coefficient for the \eqn{\xi}{csi} parameter
in the weighted log-likelihood, i.e., when \code{param_est = "ML"}.
Default is \code{0}.}

\item{X}{Numeric matrix. Matrix of predictors.}

\item{Y}{Numeric vector. Vector of response.}

\item{min.node.size}{Integer. A target for the minimum number of observations in
each tree leaf for the fitted \code{model_1}.
For further details, refer to \code{\link[grf]{quantile_forest}}.
Default is 40.}
}
\value{
Named list. The list is made of:
\itemize{
\item \code{predictions} --- Numeric matrix. Predictions at each test point (on rows) for
each desired quantile (on columns).
\item \code{pars} --- Numeric matrix. Estimated parameters at each test point (on rows).
The columns contain the estimates for the \eqn{\sigma}{sigma} and
\eqn{\xi}{csi} parameter, respectively.
\item \code{threshold} --- Numeric matrix. Intermediate thresholds at each test point (on rows),
estimated using \code{\link[grf]{quantile_forest}}.
\item \code{plot} (if \code{model_assessment = TRUE}). QQ-plot for model assessment.
}

A fitted \code{erf} object (see documentation!!!).#'
}
\description{
Predicts high conditional quantiles of Y given X using a quantile forest
fitted using \code{\link[grf]{quantile_forest}}.

Fit an extreme random forest (\code{erf}) object given a set of predictors
\code{X}, response \code{Y} and minimum node size value
(\code{min.node.size}) for the underlying quantile random forest.
}
\details{
The function fits an \code{erf} object as described by
\insertCite{merg2020;textual}{erf}.
In particular, it fits a \code{\link[grf]{quantile_forest}} (\code{model_1})
with given \code{min.node.size} that is used to obtain the weights,
and it fits a secondary \code{\link[grf]{quantile_forest}} (\code{model_2})
with default parameters that is used to obtain the intermediate threshold.
It returns an \code{erf} object (see documentation !!!).

It is possible to customize the arguments for \code{model_1}, and choose
a different \code{model_2} with corresponding arguments by calling
\code{fit_erf_devoloper} (see documentiation !!!).
}
\references{
\insertAllCited{}

\insertAllCited{}
}
